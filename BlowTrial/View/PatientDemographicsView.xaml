<UserControl 
  x:Class="BlowTrial.View.PatientDemographicsView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:vw="clr-namespace:BlowTrial.View"
  xmlns:s="clr-namespace:System;assembly=mscorlib"
  xmlns:wpfToolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
  xmlns:ex="clr-namespace:BlowTrial.Infrastructure.Converters"

  HorizontalAlignment="Stretch"
  VerticalAlignment="Top"
  >
    <UserControl.Resources>
        <ResourceDictionary Source="WorkspaceResources.xaml" />
    </UserControl.Resources>
    <ScrollViewer HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Row="0">
        <Grid Margin="0,2,5,0" Background="{Binding Path=BackgroundBrush, Mode=OneWay}" >
            <Grid.Resources>
                <Style TargetType="Label" >
                    <Setter Property="Foreground" Value="{Binding Path=TextBrush, Mode=OneWay}" />
                </Style>
                <Style TargetType="TextBlock" x:Key="siteColour">
                    <Setter Property="Foreground" Value="{Binding Path=TextBrush, Mode=OneWay}" />
                </Style>
                <Style TargetType="TextBox" x:Key="participantDemographics">
                    <Setter Property="IsEnabled" Value="False" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=RefusedConsent, Mode=OneWay}" Value="False">
                            <Setter Property="IsEnabled" Value="True" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="TextBox" x:Key="phoneNumberActive" BasedOn="{StaticResource participantDemographics}">
                    <Setter Property="IsEnabled" Value="False" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=HasNoPhone, Mode=OneWay}" Value="True">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="{x:Type CheckBox}" x:Key="participantDemographicsCB">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding OkToRandomise, Mode=OneWay}" Value="False">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="6" />
                <ColumnDefinition Width="Auto" MinWidth="287" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <ex:RowDefinitionExtended Visible="{Binding Path=IsNewRecord, Mode=OneTime}" Height="Auto" />
                <ex:RowDefinitionExtended Visible="{Binding Path=IsNewRecord, Mode=OneTime}" Height="30" />
                <ex:RowDefinitionExtended Visible="{Binding Path=IsNewRecord, Mode=OneTime}" Height="Auto" />
                <ex:RowDefinitionExtended Visible="{Binding Path=IsNewRecord, Mode=OneTime}" Height="30" />
                <ex:RowDefinitionExtended Visible="{Binding Path=IsNewRecord, Mode=OneTime}" Height="Auto" />
                <ex:RowDefinitionExtended Visible="{Binding Path=IsNewRecord, Mode=OneTime}" Height="30" />
                <ex:RowDefinitionExtended Visible="{Binding Path=IsNewRecord, Mode=OneTime}" Height="Auto" />
                <ex:RowDefinitionExtended Visible="{Binding Path=IsNewRecord, Mode=OneTime}" Height="30" />
                <ex:RowDefinitionExtended Visible="{Binding Path=IsNewRecord, Mode=OneTime}" Height="Auto" />
                <ex:RowDefinitionExtended Visible="{Binding Path=IsNewRecord, Mode=OneTime}" Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="30" />
                <ex:RowDefinitionExtended Visible="{Binding Path=WasEnvelopeRandomised, Mode=OneWay}" Height="Auto" />
                <ex:RowDefinitionExtended Visible="{Binding Path=WasEnvelopeRandomised, Mode=OneWay}" Height="30" />
                <ex:RowDefinitionExtended Visible="{Binding Path=WasEnvelopeRandomised, Mode=OneWay}" Height="Auto" />
                <ex:RowDefinitionExtended Visible="{Binding Path=WasEnvelopeRandomised, Mode=OneWay}" Height="30" />
            </Grid.RowDefinitions>

            <GridSplitter Grid.Column="1" HorizontalAlignment="Left" Grid.RowSpan="35" VerticalAlignment="Stretch" Width="6" />
            <!-- Hospital -->
            <Label 
                  Grid.Row="0" Grid.Column="0" 
                  Content="Study Centre" 
                  HorizontalAlignment="Right"
                  Target="{Binding ElementName=isMaleTxt}" 
                  />
            <ComboBox 
                  x:Name="studyCentreCombo"
                  Grid.Row="0" Grid.Column="2" 
                  ItemsSource="{Binding Path=StudyCentreOptions, Mode=OneWay}"
                  SelectedValuePath="Key" 
                  DisplayMemberPath="Value"
                  SelectedValue="{Binding Path=StudyCentre, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                  IsEnabled="{Binding Path=IsNewRecord, Mode=OneTime}"
                  />
            <ContentPresenter 
                  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                  Content="{Binding ElementName=studyCentreCombo, Path=(Validation.Errors).CurrentItem}"
                  />

            <!-- HospitalIdentifier-->
            <Label 
                  Grid.Row="2" Grid.Column="0" 
                  Content="Hospital identifier:" 
                  HorizontalAlignment="Right"
                  Target="{Binding ElementName=hospitalIdentifierTxt}" 
                  />
            <wpfToolkit:MaskedTextBox
                  Mask="{Binding Path=HospitalIdentifierMask, Mode=OneWay}"
                  IncludeLiteralsInValue="True"
                  IncludePromptInValue="False"
                  x:Name="hospitalIdentifierTxt"
                  Grid.Row="2" Grid.Column="2" 
                  Value="{Binding Path=HospitalIdentifier, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                  ValueDataType="{x:Type s:String}"
                  />
            <ContentPresenter 
                  Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                  Content="{Binding ElementName=hospitalIdentifierTxt, Path=(Validation.Errors).CurrentItem}"
                  />

            <!-- IsMale-->
            <Label 
                  Grid.Row="4" Grid.Column="0" 
                  Content="Gender:" 
                  HorizontalAlignment="Right"
                  Target="{Binding ElementName=isMaleTxt}" 
                  />
            <ComboBox 
                  x:Name="isMaleTxt"
                  Grid.Row="4" Grid.Column="2" 
                  ItemsSource="{Binding Path=IsMaleOptions, Mode=OneTime}"
                  SelectedValuePath="Key" 
                  DisplayMemberPath="Value"
                  SelectedValue="{Binding Path=IsMale, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                  />
            <ContentPresenter 
                  Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                  Content="{Binding ElementName=isMaleTxt, Path=(Validation.Errors).CurrentItem}"
                  />

            <!-- GestAge-->
            <Label 
                  Grid.Row="6" Grid.Column="0" 
                  Content="Gestational age:" 
                  HorizontalAlignment="Right"
                  Target="{Binding ElementName=gestAgeWeeksTxt}" 
                  />
            <StackPanel Orientation="Horizontal" Grid.Row="6" Grid.Column="2" >
                <TextBox 
                      x:Name="gestAgeWeeksTxt"
                      Text="{Binding Path=GestAgeWeeks, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource nullIntConvert}}"
                       Width="50"/>
                <Label Content="Weeks" Target="{Binding ElementName=gestAgeWeeksTxt}"/>
                <TextBox 
                      x:Name="gestAgeDaysTxt"
                      Text="{Binding Path=GestAgeDays, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource nullIntConvert}}"
                       Width="50"/>
                <Label Content="Days" Target="{Binding ElementName=gestAgeDaysTxt}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right">
                <ContentPresenter 
                      Content="{Binding ElementName=gestAgeWeeksTxt, Path=(Validation.Errors).CurrentItem}" />
                <ContentPresenter 
                      Content="{Binding ElementName=gestAgeDaysTxt, Path=(Validation.Errors).CurrentItem}" Margin="5,0,0,0"/>
            </StackPanel>

            <!-- AdmissionWeight-->
            <Label 
                  Grid.Row="8" Grid.Column="0" 
                  Content="Admission weight (grams):" 
                  HorizontalAlignment="Right"
                  Target="{Binding ElementName=admissionWeightTxt}" 
                  />
            <TextBox 
                  x:Name="admissionWeightTxt"
                  Grid.Row="8" Grid.Column="2" 
                  Text="{Binding Path=AdmissionWeight, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource nullIntConvert}}"
                  />
            <StackPanel Orientation="Horizontal" Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right">
                <TextBlock Text="{Binding Path=WtForAgeCentile}" Style="{StaticResource siteColour}"/>
                <ContentPresenter 
                      Content="{Binding ElementName=admissionWeightTxt, Path=(Validation.Errors).CurrentItem}" />
            </StackPanel>

            <!-- IsInborn-->
            <Label 
                    Grid.Row="10" Grid.Column="0" 
                    Content="Born in this unit:" 
                    HorizontalAlignment="Right"
                    Target="{Binding ElementName=isInbornCombo}"  
                    />
            <ComboBox 
                  x:Name="isInbornCombo"
                  Grid.Row="10" Grid.Column="2" 
                  ItemsSource="{Binding Path=IsInbornOptions, Mode=OneTime}"
                  SelectedValuePath="Key" 
                  DisplayMemberPath="Value"
                  SelectedValue="{Binding Path=IsInborn, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                  
                  />
            <ContentPresenter 
                    Grid.Row="11" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                    Content="{Binding ElementName=isInbornCombo, Path=(Validation.Errors).CurrentItem}"
                    />

            <!-- AdmissionDiagnosis-->
            <TextBlock
                  Grid.Row="12" Grid.Column="0" 
                  Margin="6" TextWrapping="Wrap"
                  HorizontalAlignment="Right"  Style="{StaticResource siteColour}">
                    What is the main admission diagnosis:
            </TextBlock>
            <TextBox Grid.Row="12" Grid.Column="2" Name="abnormalitiesTxt" Text="{Binding Path=AdmissionDiagnosis, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"  />
            <ContentPresenter 
                  Grid.Row="13" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                  Content="{Binding ElementName=abnormalitiesTxt, Path=(Validation.Errors).CurrentItem}"
                  />

            <!-- DOB-->
            <Label 
                  Grid.Row="14" Grid.Column="0" 
                  Content="Date/Time of birth:" 
                  HorizontalAlignment="Right"
                  Target="{Binding ElementName=dateOfBirthDatePicker}" 
                  />
            <StackPanel Orientation="Horizontal" Grid.Row="14" Grid.Column="2" HorizontalAlignment="Stretch" >
                <DatePicker
                      x:Name="dateOfBirthDatePicker" Width="120" SelectedDate="{Binding Path=DateOfBirth, ValidatesOnDataErrors=True, 
                            UpdateSourceTrigger=PropertyChanged}"  
                        DisplayDateEnd="{Binding Path=Today, Mode=OneWay}" DisplayDateStart="{Binding Path=MinScreeningDate, Mode=OneWay}"/>
                <wpfToolkit:MaskedTextBox Value="{Binding Path=TimeOfBirth, ValidatesOnDataErrors=True,     
                        UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ResourceKey=nullTimeConvert}, ConverterParameter=hh\\:mm}" 
                            IncludePromptInValue="False"
                            IncludeLiteralsInValue="True"
                            ValueDataType="{x:Type s:String}"
                            Grid.Row="16" Grid.Column="1" Margin="10,0" x:Name="timeOfBirthTxt" 
                            Mask="90:00" Width="50" TextAlignment="Center"/>
                <!--
                    <AdornerDecorator>
                        <TextBox x:Name="dOBTimeTxt" Text="{Binding Path=TimeOfBirth, StringFormat=hh\\:mm}" Width="59" Margin="10,0,0,0" controls:MaskedText.Mask="#0:00" TextAlignment="Right" >
                            <controls:WatermarkService.Watermark>
                                <TextBlock VerticalAlignment="Center" >HH:MM</TextBlock>
                            </controls:WatermarkService.Watermark>
                        </TextBox>
                    </AdornerDecorator>
                    -->
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="15" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right">
                <TextBlock Text="patient is &lt; 60 minutes old - they may be screened but not enrolled yet" TextWrapping="Wrap" Style="{StaticResource siteColour}"
                             Visibility="{Binding Path=IsYoungerThanMinEnrolTime, Converter={StaticResource boolToVisConverter}, Mode=OneWay}" />
                <ContentPresenter 
                            Content="{Binding ElementName=dateOfBirthDatePicker, Path=(Validation.Errors).CurrentItem}"/>
                <ContentPresenter 
                          Content="{Binding ElementName=timeOfBirthTxt, Path=(Validation.Errors).CurrentItem}" Margin="5,0,0,0"/>
            </StackPanel>

            <!-- LikelyDie24Hr-->
            <Label 
                    Grid.Row="16" Grid.Column="0" 
                    Content="Expected 24Hr Survival:" 
                    HorizontalAlignment="Right"
                    Target="{Binding ElementName=likelyDie24HrTxt}"  
                    />
            <ComboBox 
                  x:Name="likelyDie24HrTxt"
                  Grid.Row="16" Grid.Column="2" 
                  ItemsSource="{Binding Path=LikelyDie24HrOptions, Mode=OneTime}"
                  SelectedValuePath="Key" 
                  DisplayMemberPath="Value"
                  SelectedValue="{Binding Path=LikelyDie24Hr, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                  IsEnabled="{Binding Path=IsNewRecord, Mode=OneTime}"
                  />
            <ContentPresenter 
                    Grid.Row="17" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                    Content="{Binding ElementName=likelyDie24HrTxt, Path=(Validation.Errors).CurrentItem}"
                    />

            <!-- BadMalform-->
            <Label 
                  Grid.Row="18" Grid.Column="0" 
                  HorizontalAlignment="Right"
                  Target="{Binding ElementName=badMalformTxt}" 
                >
                <TextBlock TextWrapping="Wrap">
                        Severe congenital malformation:
                </TextBlock>
            </Label>
            <ComboBox
                  x:Name="badMalformTxt"
                  Grid.Row="18" Grid.Column="2" Height="26"
                  ItemsSource="{Binding Path=RequiredBoolOptions, Mode=OneTime}"
                  SelectedValuePath="Key" 
                  DisplayMemberPath="Value"
                  SelectedValue="{Binding Path=BadMalform, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                  IsEnabled="{Binding Path=IsNewRecord, Mode=OneTime}"
                  />
            <ContentPresenter 
                  Grid.Row="19" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                  Content="{Binding ElementName=badMalformTxt, Path=(Validation.Errors).CurrentItem}"
                  />

            <!-- BadInfectnImmune-->
            <Label 
                  Grid.Row="20" Grid.Column="0" 
                  HorizontalAlignment="Right"
                  Target="{Binding ElementName=badInfectnImmuneTxt}"  >
                <TextBlock TextWrapping="Wrap">
                        Mother or baby known HIV, Hep B Herpes Zoster or immunodeficiency:
                </TextBlock>
            </Label>
            <ComboBox 
                      x:Name="badInfectnImmuneTxt"
                      Grid.Row="20" Grid.Column="2" Height="26"
                      ItemsSource="{Binding Path=RequiredBoolOptions, Mode=OneTime}"
                      SelectedValuePath="Key" 
                      DisplayMemberPath="Value"
                      SelectedValue="{Binding Path=BadInfectnImmune, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                      IsEnabled="{Binding Path=IsNewRecord, Mode=OneTime}"
                      />
            <ContentPresenter 
                  Grid.Row="21" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                  Content="{Binding ElementName=badInfectnImmuneTxt, Path=(Validation.Errors).CurrentItem}"
                  />

            <!-- WasGivenBcgPrior-->
            <Label 
                  Grid.Row="22" Grid.Column="0" 
                  Content="BCG vaccination status:" 
                  HorizontalAlignment="Right"
                  Target="{Binding ElementName=wasGivenBcgPriorTxt}" 
                  />
            <ComboBox 
                  x:Name="wasGivenBcgPriorTxt"
                  Grid.Row="22" Grid.Column="2" Height="26"
                  ItemsSource="{Binding Path=WasGivenBcgPriorOptions, Mode=OneTime}"
                  SelectedValuePath="Key" 
                  DisplayMemberPath="Value"
                  SelectedValue="{Binding Path=WasGivenBcgPrior, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                IsEnabled="{Binding Path=IsNewRecord, Mode=OneTime}"/>
            <ContentPresenter 
                  Grid.Row="23" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                  Content="{Binding ElementName=wasGivenBcgPriorTxt, Path=(Validation.Errors).CurrentItem}"
                  />

            <!-- RefusedConsent-->
            <Label 
                  Grid.Row="24" Grid.Column="0" 
                  Content="Informed consent:" 
                  HorizontalAlignment="Right"
                  Target="{Binding ElementName=refusedConsentCombo}" />
            <ComboBox
                  x:Name="refusedConsentCombo"
                  Grid.Row="24" Grid.Column="2" 
                  ItemsSource="{Binding Path=RefusedConsentOptions, Mode=OneTime}"
                  SelectedValuePath="Key" 
                  DisplayMemberPath="Value"
                  SelectedValue="{Binding Path=RefusedConsent, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                IsEnabled="{Binding Path=IsNewRecord, Mode=OneTime}"
                   >
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsConsentRequired, Mode=OneWay}" Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            <ContentPresenter 
                  Grid.Row="25" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                  Content="{Binding ElementName=refusedConsentCombo, Path=(Validation.Errors).CurrentItem}" />


            <!-- Name-->
            <Label 
                  Grid.Row="26" Grid.Column="0" 
                  Content="Participant's Name:" 
                  HorizontalAlignment="Right"
                  Target="{Binding ElementName=nameTxt}" 
                  />
            <TextBox Style="{StaticResource participantDemographics}"
                  x:Name="nameTxt"
                  Grid.Row="26" Grid.Column="2" 
                  Text="{Binding Path=Name, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                  />
            <ContentPresenter 
                  Grid.Row="27" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                  Content="{Binding ElementName=nameTxt, Path=(Validation.Errors).CurrentItem}"
                  />

            <!-- MothersName-->
            <Label 
                  Grid.Row="28" Grid.Column="0" 
                  Content="Mothers Name:" 
                  HorizontalAlignment="Right"
                  Target="{Binding ElementName=mothersNameTxt}" 
                  />
            <TextBox Style="{StaticResource participantDemographics}"
                  x:Name="mothersNameTxt"
                  Grid.Row="28" Grid.Column="2" 
                  Text="{Binding Path=MothersName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                  />
            <ContentPresenter 
                  Grid.Row="29" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                  Content="{Binding ElementName=mothersNameTxt, Path=(Validation.Errors).CurrentItem}"
                  />

            <!-- PhoneNumber-->
            <Label 
                  Grid.Row="30" Grid.Column="0" 
                  Content="Phone Number:" 
                  HorizontalAlignment="Right" VerticalAlignment="Center"
                  Target="{Binding ElementName=phoneNumberTxt}" 
                  />
            <StackPanel Orientation="Vertical" Grid.Row="30" Grid.Column="2">
                <CheckBox Content="Has No Phone" IsChecked="{Binding Path=HasNoPhone, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center"
                          Style="{StaticResource participantDemographicsCB}"/>
                <TextBlock HorizontalAlignment="Center">OR (enter value)</TextBlock>
                <wpfToolkit:MaskedTextBox
                      Style="{StaticResource phoneNumberActive}"
                      x:Name="phoneNumberTxt"
                      Mask="{Binding Path=PhoneMask}"
                      IncludeLiteralsInValue="False"
                      IncludePromptInValue="False"
                      ValueDataType="{x:Type s:String}"
                      Value="{Binding Path=PhoneNumber, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                      />
            </StackPanel>
            <ContentPresenter 
                  Grid.Row="31" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                  Content="{Binding ElementName=phoneNumberTxt, Path=(Validation.Errors).CurrentItem}"
                  />

            <!--MultipleSiblingId-->
            <Label 
                  Grid.Row="32" Grid.Column="0" 
                  HorizontalAlignment="Right"
                  Target="{Binding ElementName=hasSiblingEnrolledChk}" >
                <TextBlock TextWrapping="Wrap">
                        Does the baby have a twin or triplet already enrolled in the trial:
                </TextBlock>
            </Label>
            <CheckBox Grid.Row="32" Grid.Column="2" x:Name="hasSiblingEnrolledChk" Margin="6,1,0,0" VerticalAlignment="Center"
                          IsChecked="{Binding Path=HasSiblingEnrolled}" Style="{StaticResource participantDemographicsCB}" >
            </CheckBox>
            <TextBox Grid.Row="32" Grid.Column="2" x:Name="multipleSiblingIdTxt" Margin="40,0,0,0" Height="26"
                         Text="{Binding Path=MultipleSiblingId, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource nullIntConvert}}"
                         >
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasSiblingEnrolled, Mode=OneWay}"  Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <StackPanel Orientation="Horizontal" Grid.Row="33" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right" >
                <TextBlock Text="{Binding Path=SiblingNote, Mode=OneWay}"  Style="{StaticResource siteColour}"/>
                <ContentPresenter 
                        Content="{Binding ElementName=multipleSiblingIdTxt, Path=(Validation.Errors).CurrentItem}" />
            </StackPanel>

            <!-- EnvelopeNumber -->
            <Label 
                  Grid.Row="34" Grid.Column="0" 
                  Content="Envelope Number:" 
                  HorizontalAlignment="Right"
                  Target="{Binding ElementName=envelopeNumberTxt}" 
                  />
            <TextBox
                  x:Name="envelopeNumberTxt"
                  Grid.Row="34" Grid.Column="2" 
                  Text="{Binding Path=EnvelopeNumber, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource nullIntConvert}}" 
                  >
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding OkToRandomise, Mode=OneWay}"  Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsNewRecord, Mode=OneWay}"  Value="False">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
            <ContentPresenter 
                  Grid.Row="35" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                  Content="{Binding ElementName=envelopeNumberTxt, Path=(Validation.Errors).CurrentItem}"
                  />
            <!-- DateTime Enrolment-->
            <Label 
                  Grid.Row="36" Grid.Column="0" 
                  Content="Date/Time of Enrolment:" 
                  HorizontalAlignment="Right"
                  Target="{Binding ElementName=dateOfEnrollmentDatePicker}" 
                  />
            <StackPanel Orientation="Horizontal" Grid.Row="36" Grid.Column="2" HorizontalAlignment="Stretch" >
                <DatePicker
                      x:Name="dateOfEnrollmentDatePicker" Width="120" SelectedDate="{Binding Path=DateOfEnrollment, ValidatesOnDataErrors=True, 
                            UpdateSourceTrigger=PropertyChanged}"  
                        DisplayDateEnd="{Binding Path=Today, Mode=OneWay}" DisplayDateStart="{Binding Path=MinScreeningDate, Mode=OneWay}"
                        IsEnabled="{Binding Path=OkToRandomise, Mode=OneWay}" />
                <wpfToolkit:MaskedTextBox Value="{Binding Path=TimeOfEnrollment, ValidatesOnDataErrors=True,     
                        UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ResourceKey=nullTimeConvert}, ConverterParameter=hh\\:mm}" 
                            IncludePromptInValue="False"
                            IncludeLiteralsInValue="True"
                            ValueDataType="{x:Type s:String}"
                            Grid.Row="16" Grid.Column="1" Margin="10,0" x:Name="timeOfEnrollmentTxt" 
                            Mask="90:00" Width="50" TextAlignment="Center"
                            IsEnabled="{Binding Path=OkToRandomise, Mode=OneWay}" />
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Row="37" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right">
                <ContentPresenter 
                            Content="{Binding ElementName=dateOfEnrollmentDatePicker, Path=(Validation.Errors).CurrentItem}"/>
                <ContentPresenter 
                          Content="{Binding ElementName=timeOfEnrollmentTxt, Path=(Validation.Errors).CurrentItem}" Margin="5,0,0,0"/>
            </StackPanel>
        </Grid>
    </ScrollViewer>
</UserControl>