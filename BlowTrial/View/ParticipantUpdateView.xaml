<Window
  x:Class="BlowTrial.View.ParticipantUpdateView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:vw="clr-namespace:BlowTrial.View"
  xmlns:wpfToolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
  xmlns:resx="clr-namespace:BlowTrial.Properties"
  xmlns:ex="clr-namespace:BlowTrial.Infrastructure.Converters"
  xmlns:enm="clr-namespace:BlowTrial.Domain.Outcomes;assembly=BlowTrial"
  xmlns:s="clr-namespace:System;assembly=mscorlib"
  HorizontalAlignment="Center"
  VerticalAlignment="Center"
    Title="{Binding Path=DisplayName, Mode=OneWay}" Width="635"
  >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/View/WorkspaceResources.xaml" />
                <ResourceDictionary Source="/MainWindowResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <HeaderedContentControl Header="{Binding Path=DisplayName}"
          Style="{StaticResource MainHCCStyle}" >
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="30" />
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center" TextWrapping="Wrap">
                <Run Foreground="Blue">
                    Study Site:
                </Run>
                <Run Foreground="Chocolate" Text="{Binding Path=StudyCentreName, Mode=OneWay}" />
                <Run Foreground="Blue">
                    Name:
                </Run>
                <Run Foreground="Chocolate" Text="{Binding Path=Name, Mode=OneWay}" />
                <Run Foreground="Blue">
                    Gender:
                </Run>
                <Run Foreground="Chocolate" Text="{Binding Path=Gender, Mode=OneWay}" />
                <Run Foreground="Blue">
                    Trial Arm:
                </Run>
                <Run Foreground="Chocolate" Text="{Binding Path=TrialArm, Mode=OneWay}" />
                <Run Foreground="Blue">
                    Hospital Id:
                </Run>
                <Run Foreground="Chocolate" Text="{Binding Path=HospitalIdentifier, Mode=OneWay}" />
                <Run Foreground="Blue">
                    Days of age:
                </Run>
                <Run Foreground="Chocolate" Text="{Binding Path=AgeDays, Mode=OneWay}" />
                <Run Foreground="Blue">
                    Corrected Gestation:
                </Run>
                <Run Foreground="Chocolate" Text="{Binding Path=CGA, Mode=OneWay}"/>
                <Run Foreground="Blue">
                    Mothers Name:
                </Run>
                <Run Foreground="Chocolate" Text="{Binding Path=MothersName, Mode=OneWay}"/>
            </TextBlock>
            <ScrollViewer HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Row="1" Margin="0,10,0,0" >
                <StackPanel>
                    <Grid Margin="0,0,5,0" Background="{Binding Path=BackgroundColour, Mode=OneWay}">
                        <Grid.Resources>
                            <Style TargetType="Label" >
                                <Setter Property="Foreground" Value="{Binding Path=TextColour, Mode=OneWay}" />
                            </Style>
                            <Style TargetType="TextBlock" >
                                <Setter Property="Foreground" Value="{Binding Path=TextColour, Mode=OneWay, FallbackValue=Red}" />
                            </Style>
                            <Style TargetType="RadioButton" >
                                <Setter Property="Foreground" Value="{Binding Path=TextColour, Mode=OneWay}" />
                            </Style>
                            <Style x:Key="ShowIfDischarged" TargetType="{x:Type ex:RowDefinitionExtended}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DischargedBy28Days, Mode=OneWay}" Value="false">
                                        <Setter Property="Visible" Value="false" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="ShowIfKnownOrSuspectedDead" TargetType="{x:Type ex:RowDefinitionExtended}" >
                                <Setter Property="Visible" Value="false" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsKnownDead, Mode=OneWay}" Value="true">
                                        <Setter Property="Visible" Value="true" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding OutcomeAt28Days, Mode=OneWay}" Value="{x:Static enm:OutcomeAt28DaysOption.DischargedAndLikelyToHaveDied}" >
                                        <Setter Property="Visible" Value="true" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="HideIfOutcomeMissing" TargetType="{x:Type ex:RowDefinitionExtended}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding OutcomeAt28orDischarge, Mode=OneWay}" Value="{x:Static enm:OutcomeAt28DaysOption.Missing}">
                                        <Setter Property="Visible" Value="false" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="30" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="30" />
                            <ex:RowDefinitionExtended Style="{StaticResource ShowIfDischarged}" Height="Auto"/>
                            <ex:RowDefinitionExtended Style="{StaticResource ShowIfDischarged}" Height="30"/>
                            <ex:RowDefinitionExtended Style="{StaticResource ShowIfDischarged}" Height="Auto"/>
                            <ex:RowDefinitionExtended Style="{StaticResource ShowIfDischarged}" Height="30" />
                            <ex:RowDefinitionExtended Visible="{Binding IsDeathOrLastContactRequired, Mode=OneWay}" Height="Auto" />
                            <ex:RowDefinitionExtended Visible="{Binding IsDeathOrLastContactRequired, Mode=OneWay}" Height="30" />
                            <ex:RowDefinitionExtended Style="{StaticResource ShowIfKnownOrSuspectedDead}" Height="Auto" />
                            <ex:RowDefinitionExtended Style="{StaticResource ShowIfKnownOrSuspectedDead}" Height="30" />
                            <ex:RowDefinitionExtended Style="{StaticResource ShowIfKnownOrSuspectedDead}" Height="Auto" />
                            <ex:RowDefinitionExtended Style="{StaticResource ShowIfKnownOrSuspectedDead}" Height="30" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="30" />
                            <ex:RowDefinitionExtended Visible="{Binding Path=BcgAdverse, Mode=OneWay, Converter={StaticResource nullBoolConvert}}" Height="Auto" />
                            <ex:RowDefinitionExtended Visible="{Binding Path=BcgAdverse, Mode=OneWay, Converter={StaticResource nullBoolConvert}}" Height="30" />
                            <ex:RowDefinitionExtended Height="Auto" Style="{StaticResource HideIfOutcomeMissing}"/>
                            <ex:RowDefinitionExtended Height="30" Style="{StaticResource HideIfOutcomeMissing}"/>
                            <ex:RowDefinitionExtended Height="Auto" Style="{StaticResource HideIfOutcomeMissing}"/>
                            <ex:RowDefinitionExtended Height="30" Style="{StaticResource HideIfOutcomeMissing}"/>
                            <ex:RowDefinitionExtended Style="{StaticResource HideIfOutcomeMissing}" Height="Auto" />
                            <!-- Visible="{Binding Path=LastContactWeight, Mode=OneWay, Converter={StaticResource isNotNullConvert}}"-->
                            <ex:RowDefinitionExtended Style="{StaticResource HideIfOutcomeMissing}" Height="30" />
                        </Grid.RowDefinitions>
                        <GridSplitter Grid.Column="1" HorizontalAlignment="Left" Grid.RowSpan="21" 
                                  VerticalAlignment="Stretch" Width="6" />

                        <!-- PhoneNumber-->
                        <Label 
                          Grid.Row="0" Grid.Column="0" 
                          Content="Phone Number:" 
                          HorizontalAlignment="Right"
                          Target="{Binding ElementName=phoneNumberTxt}" 
                          />
                        <wpfToolkit:MaskedTextBox
                          x:Name="phoneNumberTxt"
                          Grid.Row="0" Grid.Column="2" Mask="{Binding Path=PhoneMask}"
                          IncludeLiteralsInValue="False"
                          IncludePromptInValue="False"
                          ValueDataType="{x:Type s:String}"
                          Value="{Binding Path=PhoneNumber, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                          />
                        <ContentPresenter 
                          Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                          Content="{Binding ElementName=phoneNumberTxt, Path=(Validation.Errors).CurrentItem}"
                          />

                        <!-- OutcomeAt28Days - options 1-3 -->
                        <Label Target="{Binding ElementName=outcomeCombo}"
                            Grid.Row="2" Grid.Column="0" 
                            HorizontalAlignment="Right"
                        >
                            <TextBlock TextWrapping="Wrap" >
                        Outcome at discharge, or at 28 days of age (whichever is sooner):
                            </TextBlock>
                        </Label>
                        <ComboBox Grid.Row="2" Grid.Column="2" Name="outcomeCombo"
                            VerticalAlignment="Center" HorizontalAlignment="Stretch" 
                            ItemsSource="{Binding Path=OutcomeAt28orDischargeOptions, Mode=OneWay}"
                            SelectedValuePath="Key"  
                            DisplayMemberPath="DisplayName"
                            SelectedValue="{Binding Path=OutcomeAt28orDischarge, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" >
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="ComboBoxItem">
                                    <Setter Property="IsEnabled" Value="{Binding IsEnabled}"/>
                                </Style>
                            </ComboBox.ItemContainerStyle>
                        </ComboBox>

                        <ContentPresenter Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                      Content="{Binding ElementName=outcomeCombo, Path=(Validation.Errors).CurrentItem}" 
                      />

                        <!-- DischargeDateTime -->
                        <Label 
                  Grid.Row="4" Grid.Column="0"
                  Content="Date/time of discharge:" 
                  HorizontalAlignment="Right"
                  Target="{Binding ElementName=dischargeDatePicker}" 
                  />
                        <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="2" HorizontalAlignment="Stretch" >
                            <DatePicker x:Name="dischargeDatePicker" Width="120" SelectedDate="{Binding Path=DischargeDate, ValidatesOnDataErrors=True, 
                            UpdateSourceTrigger=PropertyChanged}" DisplayDateStart="{Binding DateTimeEnrolment, Mode=OneWay}" DisplayDateEnd="{Binding DeathLastContactTodayOr28,Mode=OneWay}"/>
                            <wpfToolkit:MaskedTextBox x:Name="dischargeTimeTxt" 
                                                      Value="{Binding Path=DischargeTime, Converter={StaticResource ResourceKey=nullTimeConvert}, ConverterParameter=hh\\:mm, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                                                      IncludeLiteralsInValue="True"
                                                      IncludePromptInValue="False"
                                                      ValueDataType="{x:Type s:String}"
                                                      Grid.Row="5" Grid.Column="1" Margin="10,0" Mask="90:00" Width="50" TextAlignment="Center"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="3"  HorizontalAlignment="Right">
                            <ContentPresenter 
                          Content="{Binding ElementName=dischargeDatePicker, Path=(Validation.Errors).CurrentItem}"/>
                            <ContentPresenter 
                          Content="{Binding ElementName=dischargeTimeTxt, Path=(Validation.Errors).CurrentItem}" Margin="5,0,0,0"/>
                        </StackPanel>
                        <!-- 28 day Outcome -->

                        <TextBlock Grid.Row="6" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="5">
                    28 day outcome (after discharge):
                        </TextBlock>
                        <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="6">
                            <StackPanel Orientation="Vertical">
                                <RadioButton Content="Known" GroupName="KnownOptions" Name="isKnownRadio"  Validation.ErrorTemplate="{x:Null}"
                                IsChecked="{Binding Path=PostDischargeOutcomeKnown, Mode=TwoWay, ValidatesOnDataErrors=True, 
                                Converter={StaticResource nullBoolConvert}, UpdateSourceTrigger=PropertyChanged}" Margin="4" />
                                <RadioButton Content="Likely" GroupName="KnownOptions" 
                                IsChecked="{Binding Path=PostDischargeOutcomeKnown, Mode=TwoWay,
                                 Converter={StaticResource boolInvertConvert}, UpdateSourceTrigger=PropertyChanged}" Margin="4" />
                            </StackPanel>
                            <TextBlock VerticalAlignment="Center">to have</TextBlock>
                            <StackPanel Orientation="Vertical">
                                <RadioButton Content="survived to 28 days " GroupName="DiedOptions" Name="isDeadRadio" Validation.ErrorTemplate="{x:Null}"
                                IsChecked="{Binding Path=DiedAfterDischarge, Mode=TwoWay, ValidatesOnDataErrors=True, 
                                Converter={StaticResource boolInvertConvert}, UpdateSourceTrigger=PropertyChanged}" Margin="4" />
                                <RadioButton Content="died before 28 days " GroupName="DiedOptions" 
                                IsChecked="{Binding Path=DiedAfterDischarge, Mode=TwoWay, 
                                Converter={StaticResource nullBoolConvert}, UpdateSourceTrigger=PropertyChanged}" Margin="4" />
                            </StackPanel>
                        </StackPanel>
                        <ContentPresenter 
                  Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                  Content="{Binding ElementName=isKnownRadio, Path=(Validation.Errors).CurrentItem}"
                  />
                        <ContentPresenter 
                  Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                  Content="{Binding ElementName=isDeadRadio, Path=(Validation.Errors).CurrentItem}"
                  />

                        <!-- DeathOrLastContactDateTime -->
                        <Label 
                      Grid.Row="8" Grid.Column="0"
                      Content="{Binding Path=DeathOrLastContactLabel, Mode=OneWay}" 
                      HorizontalAlignment="Right"
                      Target="{Binding ElementName=deathOrContactDatePicker}" 
                      />
                        <StackPanel Orientation="Horizontal" Grid.Row="8" Grid.Column="2" HorizontalAlignment="Stretch" >
                            <DatePicker x:Name="deathOrContactDatePicker" Width="120" SelectedDate="{Binding Path=DeathOrLastContactDate, ValidatesOnDataErrors=True, 
                            UpdateSourceTrigger=PropertyChanged}"  DisplayDateStart="{Binding DischargeOrEnrolment, Mode=OneWay}" DisplayDateEnd="{Binding TodayOr28, Mode=OneWay}"/>
                            <wpfToolkit:MaskedTextBox x:Name="deathOrContactTimeTxt" 
                                                      Value="{Binding Path=DeathOrLastContactTime, Converter={StaticResource ResourceKey=nullTimeConvert}, ConverterParameter=hh\\:mm, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                                                      IncludeLiteralsInValue="True"
                                                      IncludePromptInValue="False"
                                                      ValueDataType="{x:Type s:String}"
                                                      Grid.Row="5" Grid.Column="1" Margin="10,0" Mask="90:00" Width="50" TextAlignment="Center" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="3"  HorizontalAlignment="Right">
                            <ContentPresenter 
                              Content="{Binding ElementName=deathOrContactDatePicker, Path=(Validation.Errors).CurrentItem}"
                              />
                            <ContentPresenter 
                          Content="{Binding ElementName=deathOrContactTimeTxt, Path=(Validation.Errors).CurrentItem}" Margin="5,0,0,0"/>
                        </StackPanel>


                        <!-- CauseOfDeath -->
                        <Label Target="{Binding ElementName=causeOfDeathCombo}"
                            Grid.Row="10" Grid.Column="0" Content="Cause of death:"
                            HorizontalAlignment="Right"
                            >
                        </Label>
                        <ComboBox Grid.Row="10" Grid.Column="2" Name="causeOfDeathCombo" 
                          ItemsSource="{Binding Path=CauseOfDeathOptions, Mode=OneTime}"
                          SelectedValuePath="Key" 
                          DisplayMemberPath="Value"
                          SelectedValue="{Binding Path=CauseOfDeath, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                          VerticalAlignment="Center" HorizontalAlignment="Stretch" />

                        <ContentPresenter Grid.Row="11" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                      Content="{Binding ElementName=causeOfDeathCombo, Path=(Validation.Errors).CurrentItem}" 
                      />

                        <!--OtherCauseOfDeathDetail-->
                        <Label Target="{Binding ElementName=otherCauseOfDeathTxt}"
                            Grid.Row="12" Grid.Column="0" Content="Details of cause of death:"
                            HorizontalAlignment="Right"
                    >
                        </Label>
                        <TextBox Grid.Row="12" Grid.Column="2" Name="otherCauseOfDeathTxt" 
                            HorizontalAlignment="Stretch"  
                            Text="{Binding Path=OtherCauseOfDeathDetail, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>

                        <ContentPresenter Grid.Row="13" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                          Content="{Binding ElementName=otherCauseOfDeathTxt, Path=(Validation.Errors).CurrentItem}"
                          />

                        <!--BcgAdverse-->
                        <Label Target="{Binding ElementName=bcgAdverseCombo}"
                            Grid.Row="14" Grid.Column="0"
                            HorizontalAlignment="Right" Content="Severe side effects from BCG vaccine"
                            />
                        <ComboBox Grid.Row="14" Grid.Column="2" Name="bcgAdverseCombo" 
                          ItemsSource="{Binding Path=RequiredBoolOptions, Mode=OneTime}"
                          SelectedValuePath="Key" 
                          DisplayMemberPath="Value"
                          SelectedValue="{Binding Path=BcgAdverse, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                          VerticalAlignment="Center" HorizontalAlignment="Stretch" />

                        <ContentPresenter Grid.Row="15" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                          Content="{Binding ElementName=bcgAdverseCombo, Path=(Validation.Errors).CurrentItem}"
                          />

                        <!--BcgAdverseDetail-->
                        <Label Target="{Binding ElementName=bcgAdverseDetailTxt}"
                    Grid.Row="16" Grid.Column="0" Content="Details of BCG side effects:"
                    HorizontalAlignment="Right"
                    >
                        </Label>
                        <TextBox Grid.Row="16" Grid.Column="2" Name="bcgAdverseDetailTxt" 
                     HorizontalAlignment="Stretch"  
                         Text="{Binding Path=BcgAdverseDetail, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>

                        <ContentPresenter Grid.Row="17" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                      Content="{Binding ElementName=bcgAdverseDetailTxt, Path=(Validation.Errors).CurrentItem}"
                      />

                        <!--BcgPapule-->
                        <Label Target="{Binding ElementName=bcgPapuleCombo}"
                            Grid.Row="18" Grid.Column="0"
                            HorizontalAlignment="Right" Content="{Binding Path=BcgPapuleLabel}"
                            />
                        <ComboBox Grid.Row="18" Grid.Column="2" Name="bcgPapuleCombo" 
                          ItemsSource="{Binding Path=RequiredBoolOptions, Mode=OneTime}"
                          SelectedValuePath="Key" 
                          DisplayMemberPath="Value"
                          SelectedValue="{Binding Path=BcgPapule, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                          VerticalAlignment="Center" HorizontalAlignment="Stretch" />

                        <ContentPresenter Grid.Row="19" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                          Content="{Binding ElementName=bcgPapuleCombo, Path=(Validation.Errors).CurrentItem}"
                          />

                        <!--LastContactWeight-->
                        <Label Target="{Binding ElementName=lastContactWeightTxt}"
                            Grid.Row="20" Grid.Column="0"
                            HorizontalAlignment="Right" Content="{Binding Path=WeightLabel}"
                            />
                        <TextBox Grid.Row="20" Grid.Column="2" Name="lastContactWeightTxt" 
                            HorizontalAlignment="Stretch"  
                            Text="{Binding Path=LastContactWeight, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource nullIntConvert}}"/>
                        <StackPanel Orientation="Horizontal" Grid.Row="21" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right">
                            <TextBlock Text="{Binding Path=WtForAgeCentile}" />
                            <ContentPresenter 
                            Content="{Binding ElementName=lastContactWeightTxt, Path=(Validation.Errors).CurrentItem}"
                            />
                        </StackPanel>

                        <!-- LastWeightDate -->
                        <Label 
                          Grid.Row="22" Grid.Column="0"
                          Content="Date of weight:" 
                          HorizontalAlignment="Right"
                          Target="{Binding ElementName=lastWeightDatePicker}" 
                          />
                        <DatePicker Grid.Row="22" Grid.Column="2" x:Name="lastWeightDatePicker" Width="120" 
                            HorizontalAlignment="Left"
                            SelectedDate="{Binding Path=LastWeightDate, ValidatesOnDataErrors=True, 
                            UpdateSourceTrigger=PropertyChanged}" DisplayDateStart="{Binding DateTimeEnrolment, Mode=OneWay}" DisplayDateEnd="{Binding DeathLastContactTodayOr28, Mode=OneWay}" />
                        <ContentPresenter 
                          Grid.Row="23" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Right"
                          Content="{Binding ElementName=lastWeightDatePicker, Path=(Validation.Errors).CurrentItem}"
                          />

                    </Grid>
                    <DockPanel  Margin="10">
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" HorizontalAlignment="Stretch">
                            <TextBlock  Text="Vaccines:" 
                               HorizontalAlignment="Left" Margin="5,5,15,5">
                            </TextBlock>
                            <TextBlock 
                                Margin="5">
                                <Hyperlink Command="{Binding Path=NewVaccineCmd}">
                                    Add New Type of Vaccine:
                                </Hyperlink>
                            </TextBlock>
                            <TextBox Name="newVaccineNameTextBox" 
                                HorizontalAlignment="Stretch"  
                                 Text="{Binding Path=NewVaccineName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <DataGrid DockPanel.Dock="Bottom" Grid.Row="24" Grid.Column="2" ItemsSource="{Binding Path=VaccinesAdministered}"
                              AutoGenerateColumns="False"  CanUserDeleteRows="True">

                        <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Vaccine" >
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <DataTemplate.Resources>
                                                <Style TargetType="ComboBoxItem" >
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsGivenToThisPatient, Mode=OneWay}" Value="true" />
                                                                <Condition  Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected, Mode=OneWay}" Value="false" />
                                                            </MultiDataTrigger.Conditions>
                                                            <Setter Property="IsEnabled" Value="false" />
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataTemplate.Resources>
                                            <ComboBox ItemsSource="{Binding Path=VaccineList}"
                                                DisplayMemberPath="DisplayName" 
                                                SelectedItem="{Binding Path=SelectedVaccine,ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                            />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Date Given" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding Path=AdministeredAtDate, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                                    DisplayDateStart="{Binding Path=EarliestDate, Mode=OneWay}" 
                                                    DisplayDateEnd="{Binding RelativeSource={RelativeSource FindAncestor, 
                                                        AncestorType={x:Type Window}}, Path=DataContext.DeathLastContactTodayOr28, Mode=OneWay}" />
                                        
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Time Given" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <wpfToolkit:MaskedTextBox 
                                                    Value="{Binding Path=AdministeredAtTime, Converter={StaticResource ResourceKey=nullTimeConvert}, ConverterParameter=hh\\:mm, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" 
                                                    IncludeLiteralsInValue="True"
                                                    IncludePromptInValue="False"
                                                    ValueDataType="{x:Type s:String}"
                                                    Mask="90:00" Width="50" TextAlignment="Center" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="*" >
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                            <TextBlock 
                                              VerticalAlignment="Center" Style="{StaticResource errorStyle}"
                                            Text="{Binding RelativeSource={RelativeSource
                                                    FindAncestor, AncestorType={x:Type DataGridRow}},
                                                    Path=(Validation.Errors).CurrentItem.ErrorContent}" 
                                          />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    </DockPanel>
                </StackPanel>
            </ScrollViewer>
        <Line Grid.Row="1" 
            VerticalAlignment="Top" Stroke="Gray" StrokeThickness="1"
            X2="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}}" />
            <Line Grid.Row="2" 
            VerticalAlignment="Top" Stroke="Gray" StrokeThickness="1"
            X2="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}}" />
            <!-- BUTTON -->

                <Button Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Center"
              Command="{Binding Path=SaveChanges}"
              Content="_Save Changes"
              Padding="4,0,4,2" Margin="4"/>

    </Grid>
    </HeaderedContentControl>
</Window>